import React, { Component } from 'react';
import './App.css';
import Dashborad from './screens/dashborad/dashboard';
import AdminPage from './screens/admin/adminPage';
import logo from './logo.png';


class App extends Component {
  constructor(props) {
    super(props);

    // Ï∫êÏãú Î∞©ÏßÄ ÏÑ§Ï†ï
    if ('caches' in window) {
      caches.keys().then(function(names) {
        for (let name of names) {
          caches.delete(name);
        }
      });
    }

    // Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú ÌòÑÏû¨ ÌéòÏù¥ÏßÄ Í∞ÄÏ†∏Ïò§Í∏∞
    const savedPage = localStorage.getItem('currentPage') || 'dashboard';

    this.state = {
      user: true,             // Ìï≠ÏÉÅ Î°úÍ∑∏Ïù∏Îêú ÏÉÅÌÉúÎ°ú ÏÑ§Ï†ï
      admin: false,           // Í¥ÄÎ¶¨Ïûê ÌéòÏù¥ÏßÄ ÏÉÅÌÉú
      quizzes: [
        {
          date: '2025-10-20', 
          name: '1', 
          formUrl: 'https://docs.google.com/forms/d/e/1FAIpQLSeam56vTDtPclMUPx-3heHiO0dzJqGPIFuv48KTGaywesBZ7A/viewform',
          answer: 
          // `P√°gina en preparaci√≥n`
`‚≠êÔ∏è Tema de la lecci√≥n y pregunta de reflexi√≥n

üìÜ Fecha : 25.10.20
üìò Tema de la lecci√≥n: Una Mente Puesta en las Cosas de Arriba 
üìú Vers√≠culos de referencia: Col3:2

‚úèÔ∏è Pregunta para reflexionar : 
1. ¬øQu√© es lo que Dios desea que elijamos?

2. ¬øQu√© son las cosas de Arriba y las cosas de abajo?

3. ¬øQue es una mente pecaminosa y una mente del esp√≠ritu?

4. ¬øComo puedo recibir vida?

5. De acuerdo a Lc10:38-42, ¬øPor qu√© Jes√∫s dijo que Mar√≠a hab√≠a escogido la √∫nica cosa?

‚úÖ Respuesta sugerida :
1. Dt30:19-20 la vida y la bendici√≥n 

2. ‚Ä¢ Arriba: Cielo --> Dios 
‚Ä¢ Abajo: Tierra --> muerte

3. ‚Ä¢ Mente pecaminosa: dedicada solo a las cosas de la carne.
‚Ä¢ Mente en el esp√≠ritu: puesta en las cosas de Dios y el cielo.

4. Jn6:63 por medio de la palabra.

5. A) Por lo principal de la vida no era afanarse.

    B) Por qu√© era el √∫nico tiempo con Jes√∫s.

    C) Por qu√© Jes√∫s representaba la promesa de Dios cumplida. ‚úÖ`,
          quizUploaded: true,
          answerUploaded: true
        },
        {
          date: '2025-10-23', 
          name: '2', 
          formUrl: 'https://docs.google.com/forms/d/e/1FAIpQLSdwIxObz_GPzMQAAEii4Ocqmy4Y03b4Teii4tf_W9oF_avD1Q/viewform',
          answer: 
          `P√°gina en preparaci√≥n`,
          quizUploaded: true,
          answerUploaded: false
        }

      ],
      pageStack: [savedPage]
    };

    // Î∞îÏù∏Îî©
    this.navabar = this.navabar.bind(this);
    this.dashboradPage = this.dashboradPage.bind(this);
    this.adminPage = this.adminPage.bind(this);
    this.backToDashboard = this.backToDashboard.bind(this);
    this.toggleQuizUpload = this.toggleQuizUpload.bind(this);
    this.toggleAnswerUpload = this.toggleAnswerUpload.bind(this);
  }

  // Navbar
  navabar() {
    return (
      <nav className="navbar navbar-light bg-light">
        {/* <a className="navbar-brand" href="#"> */}
        <button className="navbar-brand" style={{ background: 'none', border: 'none', padding: 0, cursor: 'pointer' /* Ïó¨Í∏∞Ïóê Ï∂îÍ∞Ä Ïä§ÌÉÄÏùº */ }}>
          <img src={logo} width="30" height="30" className="d-inline-block align-top" alt="" />
          Quizzes
        </button>
      </nav>
    );
  }

 // ÌéòÏù¥ÏßÄ Ï†ÑÌôò Ìï®Ïàò

dashboradPage() {
  localStorage.setItem('currentPage', 'dashboard');
  this.setState({ user: true, admin: false, pageStack: ['dashboard'] });
}

// Í¥ÄÎ¶¨Ïûê ÌéòÏù¥ÏßÄ Ìï®Ïàò
adminPage() {
  const password = prompt('Í¥ÄÎ¶¨Ïûê ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî:');
  if (password === 'scj0314') {
    localStorage.setItem('currentPage', 'admin');
    this.setState({ user: false, admin: true, pageStack: ['admin'] });
  } else if (password !== null) {
    alert('ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.');
  }
}

// ÎåÄÏãúÎ≥¥ÎìúÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
backToDashboard() {
  localStorage.setItem('currentPage', 'dashboard');
  this.setState({ user: true, admin: false, pageStack: ['dashboard'] });
}

// ÌÄ¥Ï¶à ÏóÖÎ°úÎìú ÏÉÅÌÉú ÌÜ†Í∏Ä
toggleQuizUpload(quizIndex) {
  this.setState(prevState => ({
    quizzes: prevState.quizzes.map((quiz, index) => 
      index === quizIndex 
        ? { ...quiz, quizUploaded: !quiz.quizUploaded }
        : quiz
    )
  }));
}

// ÎãµÎ≥Ä ÏóÖÎ°úÎìú ÏÉÅÌÉú ÌÜ†Í∏Ä
toggleAnswerUpload(quizIndex) {
  this.setState(prevState => ({
    quizzes: prevState.quizzes.map((quiz, index) => 
      index === quizIndex 
        ? { ...quiz, answerUploaded: !quiz.answerUploaded }
        : quiz
    )
  }));
}

render() {
  const { user, admin, quizzes } = this.state;

  return (
    <div className="App">
      <this.navabar />
      <br />

      {user && !admin && <Dashborad 
        list={quizzes} 
        adminPage={this.adminPage}
        toggleQuizUpload={this.toggleQuizUpload}
        toggleAnswerUpload={this.toggleAnswerUpload}
      />}
      {admin && <AdminPage backToDashboard={this.backToDashboard} />}
    </div>
  );
}
}

export default App;


